resource_types:
- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource
    tag: beta-backend

- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

shared:
- params: &om-creds
    OM_USERNAME: ((om.username))
    OM_PASSWORD: ((om.password))

resources:
- name: cf-infra-tracker
  type: tracker
  source:
    token: ((cf_infra_tracker_token))
    project_id: ((cf_infrastructure_tracker_id))
    tracker_url: https://www.pivotaltracker.com

- name: after-midnight
  type: time
  source:
    start: 12:00 AM -0700
    stop: 2:00 AM -0700

- name: terraforming
  type: git
  source:
    branch: master
    uri: git@github.com:pivotal-cf/terraforming-aws.git
    private_key: ((cf_infra_bot_github_user.private_key))

- name: terraforming-release
  type: github-release
  source:
    owner: pivotal-cf
    repository: terraforming-aws
    access_token: ((cf_infra_bot_user_github_access_token))
    drafts: true

- name: version
  type: semver
  source:
    driver: s3
    bucket: terraforming
    key: terraforming-aws/version
    access_key_id: ((aws_access_key_id))
    secret_access_key: ((aws_secret_access_key))

- name: env-state-aws
  type: terraform
  source:
    backend_type: gcs
    backend_config:
      bucket: infra-tf-states
      prefix: aws
      region: us-central1
      credentials: ((cf_infra_gcp_service_account_key))
    vars:
      region: us-east-2
      access_key: ((aws_access_key_id))
      secret_key: ((aws_secret_access_key))
      ssl_cert: ((terraforming-aws.certificate))
      ssl_private_key: ((terraforming-aws.private_key))
      availability_zones: ["us-east-2a", "us-east-2c"]
      rds_instance_count: 0
      dns_suffix: aws.infrastructure.cf-app.com
      top_level_zone_id: ((terraforming-aws-root-zone-id))
    env:
      AWS_ACCESS_KEY_ID: ((aws_access_key_id))
      AWS_SECRET_ACCESS_KEY: ((aws_secret_access_key))
      AWS_DEFAULT_REGION: us-east-2

- name: infrastructure-ci
  type: git
  source:
    branch: master
    uri: https://github.com/cloudfoundry/infrastructure-ci.git

- name: pcf-releng-ci
  type: git
  source:
    uri: git@github.com:pivotal-cf/pcf-releng-ci.git
    private_key: ((cf_infra_bot_github_user.private_key))
    ignore_paths:
    - pipelines
    - ci_screen

- name: pks
  type: pivnet
  source:
    api_token: ((pivnet_token))
    product_slug: pivotal-container-service
    product_version: ^\d+\.\d+\.\d+
    sort_by: semver

- name: srt
  type: pivnet
  source:
    api_token: ((pivnet_token))
    product_slug: elastic-runtime
    product_version: ^\d+\.\d+\.\d+
    sort_by: semver

- name: opsman-image
  type: pivnet
  source:
    product_slug: ops-manager
    api_token: ((pivnet_token))
    product_version: ^\d+\.\d+\.\d+
    sort_by: semver

jobs:
- name: deploy-pks
  serial: true
  public: false
  plan:
  - in_parallel:
    - get: after-midnight
      trigger: true
    - get: terraforming
      trigger: true
    - get: ci
      resource: infrastructure-ci
    - get: pcf-releng-ci
    - get: pks
      trigger: true
    - get: opsman-image
      trigger: true
      params:
        globs:
        - '*aws*.yml'
  - do:
    - task: opsman-url
      file: ci/scripts/terraforming/latest-opsman/task.yml
      params:
        IAAS: aws
        KEY: us-east-2
    - put: env-state-aws
      params:
        env_name: tf-pks-ci
        terraform_source: terraforming/terraforming-pks
        delete_on_failure: true
        var_files: [tfvars/terraform.yml]
        override_files:
        - terraforming/ci/dns-override/aws_dns_root_zone_override.tf
    - in_parallel:
      - task: configure-director
        file: ci/scripts/terraforming/configure-director/task.yml
        params:
          <<: *om-creds
          TEMPLATE_PATH: director-config-template/ci/assets/template/director-config.yml
          CA_CERT: ((terraforming-ca.ca))
        input_mapping:
          env-state: env-state-aws
          director-config-template: terraforming
      - task: download-stemcell
        file: pcf-releng-ci/tasks/configuration/download-pivnet-stemcell/task.yml
        input_mapping:
          ert-product: pks
        params:
          IAAS_TYPE: aws
          PIVNET_TOKEN: ((pivnet_token))
    - task: custom-vm-extensions
      file: terraforming/ci/tasks/custom-vm-extensions.yml
      input_mapping:
        env-state: env-state-aws
      params:
        PRODUCT: pivotal-container-service
        <<: *om-creds
    - task: upload-configure-stage-pks
      file: ci/scripts/terraforming/upload-configure-stage/task.yml
      params:
        <<: *om-creds
        PRODUCT_NAME: pivotal-container-service
        PRODUCT_CONFIG_TEMPLATE: ci/assets/template/pks-config.yml
      input_mapping:
        env-state: env-state-aws
        product: pks
        product-config-repo: terraforming
    - task: apply-changes
      attempts: 3
      file: ci/scripts/terraforming/apply-changes/task.yml
      params:
        <<: *om-creds
      input_mapping:
        env-state: env-state-aws
    ensure:
      do:
      - task: delete-installation
        file: pcf-releng-ci/tasks/environment/delete-installation/task.yml
        params:
          OPSMAN_USERNAME: ((om.username))
          OPSMAN_PASSWORD: ((om.password))
          OPSMAN_URL_SUFFIX: aws.infrastructure.cf-app.com
        input_mapping:
          environment: env-state-aws
      - put: env-state-aws
        params:
          terraform_source: terraforming/terraforming-pks
          env_name_file: env-state-aws/name
          delete_on_failure: true
          action: destroy
          var_files: [tfvars/terraform.yml]
          override_files:
          - terraforming/ci/dns-override/aws_dns_root_zone_override.tf
        get_params:
          action: destroy

- name: deploy-pas
  serial: true
  public: false
  plan:
  - in_parallel:
    - get: after-midnight
      trigger: true
    - get: terraforming
      trigger: true
    - get: ci
      resource: infrastructure-ci
    - get: pcf-releng-ci
    - get: srt
      trigger: true
      params:
        globs:
        - srt-*.pivotal
    - get: opsman-image
      trigger: true
      params:
        globs:
        - '*aws*.yml'
  - do:
    - task: opsman-url
      file: ci/scripts/terraforming/latest-opsman/task.yml
      params:
        IAAS: aws
        KEY: us-east-2
    - put: env-state-aws
      params:
        env_name: tf-ci
        terraform_source: terraforming/terraforming-pas
        delete_on_failure: true
        var_files: [tfvars/terraform.yml]
        override_files:
        - terraforming/ci/dns-override/aws_dns_root_zone_override.tf
    - in_parallel:
      - task: configure-director
        file: ci/scripts/terraforming/configure-director/task.yml
        params:
          <<: *om-creds
          TEMPLATE_PATH: director-config-template/ci/assets/template/director-config.yml
          CA_CERT: ((terraforming-aws.ca))
        input_mapping:
          env-state: env-state-aws
          director-config-template: terraforming
      - task: download-stemcell
        file: pcf-releng-ci/tasks/configuration/download-pivnet-stemcell/task.yml
        input_mapping:
          ert-product: srt
        params:
          IAAS_TYPE: aws
          PIVNET_TOKEN: ((pivnet_token))
    - task: custom-vm-extensions
      file: terraforming/ci/tasks/custom-vm-extensions.yml
      params:
        PRODUCT: cf
        <<: *om-creds
      input_mapping:
        env-state: env-state-aws
    - task: upload-configure-stage-pas
      file: ci/scripts/terraforming/upload-configure-stage/task.yml
      params:
        <<: *om-creds
        PRODUCT_NAME: cf
        PRODUCT_CONFIG_TEMPLATE: ci/assets/template/srt-config.yml
      input_mapping:
        env-state: env-state-aws
        product: srt
        product-config-repo: terraforming
    - task: apply-changes
      attempts: 3
      file: ci/scripts/terraforming/apply-changes/task.yml
      params:
        <<: *om-creds
      input_mapping:
        env-state: env-state-aws
    ensure:
      do:
      - task: delete-installation
        file: pcf-releng-ci/tasks/environment/delete-installation/task.yml
        params:
          OPSMAN_USERNAME: ((om.username))
          OPSMAN_PASSWORD: ((om.password))
          OPSMAN_URL_SUFFIX: aws.infrastructure.cf-app.com
        input_mapping:
          environment: env-state-aws
      - put: env-state-aws
        params:
          terraform_source: terraforming/terraforming-pas
          env_name_file: env-state-aws/name
          delete_on_failure: true
          action: destroy
          var_files: [tfvars/terraform.yml]
          override_files:
          - terraforming/ci/dns-override/aws_dns_root_zone_override.tf
        get_params:
          action: destroy

- name: publish
  serial: true
  plan:
  - in_parallel:
    - get: terraforming
      passed: [deploy-pas, deploy-pks]
      trigger: true
    - get: version
      params:
        bump: minor
    - get: ci
      resource: infrastructure-ci
  - task: release
    file: ci/scripts/terraforming/release/task.yml
    params:
      IAAS: aws
  - put: terraforming-release
    params:
      name: release/version
      tag: release/version
      commitish: release/commitish
      globs:
      - release/terraforming-aws-*.tar.gz
  - put: version
    params:
      bump: minor
      file: version/version

- name: deliver-stories
  plan:
  - get: terraforming
    trigger: true
    passed:
    - deploy-pks
    - deploy-pas
  - put: cf-infra-tracker
    params:
      repos:
      - terraforming
